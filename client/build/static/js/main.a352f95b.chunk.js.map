{"version":3,"sources":["lib/reducers/rootReducer.js","lib/reducers/products.js","lib/reducers/cart.js","lib/reducers/loading.js","lib/store.js","components/CartItem.jsx","lib/ApiClient.js","constants/ApiRoutes.js","components/ShoppingCart.jsx","actions/productActions.js","components/ProductForm.jsx","components/EditProductForm.jsx","components/EditableProduct.jsx","components/ProductListing.jsx","components/AddProductForm.jsx","components/Shop.js","components/Application.jsx","serviceWorker.js","index.js"],"names":["rootReducer","combineReducers","products","state","action","type","concat","payload","filter","product","_id","map","Object","assign","item","productId","quantity","cart","someInCart","some","loading","store","createStore","applyMiddleware","thunk","CartItem","props","title","price","apiClient","getProducts","callback","axios","get","then","response","data","catch","err","console","log","addProduct","post","deleteProduct","id","delete","routes","updateProduct","put","getCartItems","addToCart","checkout","ShoppingCart","dispatch","useDispatch","useSelector","useEffect","cartItems","cartItemsReceivedSuccess","useCallback","key","calculateTotal","Math","round","reduce","acc","length","className","colSpan","toFixed","onClick","ProductForm","htmlFor","name","value","onChange","onInputChange","onSubmit","submitText","onCancelClick","EditProductForm","useState","setTitle","setPrice","setQuantity","e","target","preventDefault","editedProduct","onUpdateProduct","onToggleEdit","EditableProduct","editable","setEditable","isZeroQuantity","deleteProductSuccess","handleAddToCart","cartItem","updatedProduct","addToCartSuccess","handleToggleEdit","newProduct","updateProductSuccess","updateProductAction","ProductListing","productsReceivedSuccess","editableProducts","AddProductForm","visible","setVisible","handleToggleAddForm","resetState","addFormClass","addProductSuccess","Shop","Application","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"6OAKaA,EAAcC,YAAgB,CACzCC,SCNsB,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC9C,OAAQA,EAAOC,MACb,IAAK,oBACH,OAAOF,EAAMG,OAAOF,EAAOG,SAC7B,IAAK,kBACH,OAAOJ,EAAMK,QAAO,SAACC,GAAD,OAAaA,EAAQC,MAAQN,EAAOG,WAC1D,IAAK,gBACH,OAAOJ,EAAMG,OAAOF,EAAOG,SAC7B,IAAK,kBACH,OAAOJ,EAAMQ,KAAI,SAACF,GAChB,OAAIA,EAAQC,MAAQN,EAAOG,QAAQG,IAC1BE,OAAOC,OAAO,GAAIT,EAAOG,SAEzBE,KAGb,IAAK,gBACH,OAAON,EAAMQ,KAAI,SAACF,GAChB,GAAIA,EAAQC,MAAQN,EAAOU,KAAKC,UAAW,CACzC,IAAMC,EAAgC,IAArBP,EAAQO,SAAiB,EAAIP,EAAQO,SAAW,EACjE,OAAOJ,OAAOC,OAAO,GAAIJ,EAAS,CAAEO,aAEpC,OAAOP,KAGb,QACE,OAAON,IDnBXc,KEPkB,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIC,EAAW,uCAC1C,OAAQA,EAAOC,MACb,IAAK,gBAIH,IAHA,IAAMa,EAAaf,EAAMgB,MAAK,SAACL,GAAD,OAAUA,EAAKJ,MAAQN,EAAOU,KAAKJ,OAG1DN,EAAOU,KAAKE,SAAW,GAgB5B,OAfIE,EACYf,EAAMQ,KAAI,SAACF,GACvB,OAAIA,EAAQC,MAAQN,EAAOU,KAAKJ,IACvBE,OAAOC,OAAO,GAAIJ,EAAS,CAChCO,SAAUP,EAAQO,SAAW,IAGxBP,KAIGN,EAAMG,OAClBM,OAAOC,OAAO,GAAIT,EAAOU,KAAM,CAAEE,SAAU,KAKjD,OAAOb,EACT,IAAK,sBACH,OAAOC,EAAOG,QAChB,IAAK,WACH,MAAO,GACT,QACE,OAAOJ,IFtBXiB,QGRqB,WAA4B,IAA3BjB,EAA0B,wDAAXC,EAAW,uCAChD,OAAQA,EAAOC,MACb,IAAK,sBACH,OAAO,EACT,IAAK,gBACH,OAAO,EACT,QACE,OAAOF,MCDEkB,EAFDC,YAAYtB,EAAauB,YAAgBC,M,OCQxCC,EAVE,SAACC,GAChB,OACE,4BACE,4BAAKA,EAAMC,OACX,4BAAKD,EAAMV,UACX,gCAAMU,EAAME,S,yBCwDHC,EAzDG,CAChBC,YAAa,SAAUC,GACrB,OAAOC,IACJC,ICPyB,iBDQzBC,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BF,KAAKH,GACLM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAEhCG,WAAY,SAAUhC,EAASsB,GAC7B,OAAOC,IACJU,KChBwB,gBDepB,eAC8BjC,IAClCyB,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BF,KAAKH,GACLM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAEhCK,cAAe,SAAUC,EAAIb,GAC3B,OAAOC,IACJa,OCnBsB,SAACD,GAAD,8BAAyBA,GDmBxCE,CAAqBF,IAC5BV,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BF,KAAKH,GACLM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAGhCS,cAAe,SAAUH,EAAInC,EAASsB,GACpC,OAAOC,IACJgB,ICzBsB,SAACJ,GAAD,8BAAyBA,GDyB3CE,CAAqBF,GADrB,eAC+BnC,IACnCyB,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BF,KAAKH,GACLM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAEhCW,aAAc,SAAUlB,GACtB,OAAOC,IACJC,IC9BuB,aD+BvBC,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BF,KAAKH,GACLM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAEhCY,UAAW,SAAUzC,EAASsB,GAC5B,OAAOC,IACJU,KCtCoB,YDsCK,CACxB3B,UAAWN,EAAQmC,GACnBjB,MAAOlB,EAAQkB,MACfC,MAAOnB,EAAQmB,QAEhBM,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BF,KAAKH,GACLM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAEhCa,SAAU,SAAUpB,GAClB,OAAOC,IACJU,KC/CiB,sBDgDjBR,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BF,KAAKH,GACLM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QEnDlC,IA6Dec,EA7DM,WACnB,IAAMC,EAAWC,cAEXrC,EAAOsC,aAAY,SAACpD,GACxB,OAAOA,EAAMc,QAGfuC,qBAAU,WCgEL,IAA8BzB,ED/DjCsB,GCgEK,SAAUA,GACfxB,EAAUoB,cAAa,SAACQ,GACtBJ,EAxDkC,SAACI,GACvC,MAAO,CAAEpD,KAAM,sBAAuBE,QAASkD,GAuDlCC,CAAyBD,OAEhC1B,GACFA,SDpED,IAEH,IAAMoB,EAAWQ,uBAAY,WCqFxB,IAAwB5B,EDpF3BsB,GCqFK,SAAUA,GACfxB,EAAUsB,UAAS,WACjBE,EA5EG,CAAEhD,KAAM,gBA8ET0B,GACFA,SDzFD,CAACsB,IAEEI,EAAYxC,EAAKN,KAAI,SAACG,GAAD,OAAU,kBAAC,EAAD,eAAU8C,IAAK9C,EAAKJ,KAASI,OAE5D+C,EACJC,KAAKC,MAC+D,IAAlE9C,EAAK+C,QAAO,SAACC,EAAKnD,GAAN,OAAemD,EAAMnD,EAAKc,MAAQd,EAAKE,WAAU,IAC3D,IACN,OACE,gCACE,yCACiB,IAAhBC,EAAKiD,OACJ,yBAAKC,UAAU,QACb,yCACA,iDACA,wCACA,uBAAGA,UAAU,4BAAb,aAGF,yBAAKA,UAAU,QACb,yCACA,2BAAOA,UAAU,cACf,+BACE,4BACE,oCACA,wCACA,uCAGJ,+BACGV,EAED,4BACE,wBAAIW,QAAQ,IAAID,UAAU,SAA1B,WACWN,EAAeQ,QAAQ,OAKxC,uBAAGF,UAAU,kBAAkBG,QAASnB,GAAxC,e,eELKoB,EArDK,SAAC7C,GAAW,IAAD,EAC7B,OACE,8BACE,yBAAKyC,UAAU,eACb,2BAAOK,QAAQ,gBAAf,gBACA,2BACEnE,KAAK,OACLuC,GAAG,eACH6B,KAAK,QACLC,MAAOhD,EAAMC,MACbgD,SAAUjD,EAAMkD,iBAIpB,yBAAKT,UAAU,eACb,2BAAOK,QAAQ,iBAAf,SACA,2BACEnE,KAAK,OACLuC,GAAG,gBACH6B,KAAK,QACLC,MAAOhD,EAAME,MACb+C,SAAUjD,EAAMkD,iBAIpB,yBAAKT,UAAU,eACb,2BAAOK,QAAQ,oBAAf,YACA,8BACEnE,KAAK,OACLuC,GAAG,mBACH8B,MAAM,IACND,KAAK,YAJP,sBAKS/C,EAAMV,UALf,yBAMYU,EAAMkD,eANlB,KAUF,yBAAKT,UAAU,wBACb,uBAAGA,UAAU,SAASG,QAAS5C,EAAMmD,UAClCnD,EAAMoD,YAEa,QAArBpD,EAAMoD,WACL,uBAAGX,UAAU,SAASG,QAAS5C,EAAMqD,eAArC,UAIA,MCSKC,EAtDS,SAACtD,GAAW,IAAD,EACPuD,mBAASvD,EAAMjB,QAAQkB,OAAS,IADzB,mBAC1BA,EAD0B,KACnBuD,EADmB,OAEPD,mBAASvD,EAAMjB,QAAQmB,OAAS,GAFzB,mBAE1BA,EAF0B,KAEnBuD,EAFmB,OAGDF,mBAASvD,EAAMjB,QAAQO,UAAY,GAHlC,mBAG1BA,EAH0B,KAGhBoE,EAHgB,KAsCjC,OACE,yBAAKjB,UAAU,aACb,4CACA,kBAAC,EAAD,CACExC,MAAOA,EACPC,MAAOA,EACPZ,SAAUA,EACV4D,cA9BoB,SAACS,GACzB,IAAMZ,EAAOY,EAAEC,OAAOb,KAChBC,EAAQW,EAAEC,OAAOZ,MACvB,OAAQD,GACN,IAAK,QACHS,EAASR,GACT,MACF,IAAK,QACHS,EAAST,GACT,MACF,IAAK,WACHU,EAAYV,KAoBZG,SAzCe,SAACQ,GACpBA,EAAEE,iBACF,IAAIC,EAAgB,CAClB7D,QACAC,QACAZ,YAEFU,EAAM+D,gBAAgBD,EAAe9D,EAAMjB,QAAQC,IAAKgB,EAAMgE,eAmC1DZ,WAAW,SACXC,cAjBoB,WACxBG,EAASxD,EAAMjB,QAAQkB,OACvBwD,EAASzD,EAAMjB,QAAQmB,OACvBwD,EAAY1D,EAAMjB,QAAQO,UAC1BU,EAAMgE,oBC4CKC,EAzES,SAACjE,GAAW,IAAD,EACDuD,oBAAS,GADR,mBAC1BW,EAD0B,KAChBC,EADgB,KAEzBpF,EAAYiB,EAAZjB,QACFqF,EAAsC,IAArBrF,EAAQO,SAEzBI,EAAUmC,aAAY,SAACpD,GAAD,OAAWA,EAAMiB,WAEvCiC,EAAWC,cAEXX,EAAgB,SAACC,GHuClB,IAA6B7B,EAAWgB,EGtC3CsB,GHsCgCtC,EGtCH6B,EHuCxB,SAAUS,GACfxB,EAAUc,cAAc5B,GAAW,WACjCsC,EAlD8B,SAACtC,GACnC,MAAO,CAAEV,KAAM,kBAAmBE,QAASQ,GAiD9BgF,CAAqBhF,OAE5BgB,GACFA,QGrCEiE,EAAkB,SAACvF,GHgEpB,IAAyBwF,EAAUlF,EAAWgB,EG/DxB,IAArBtB,EAAQO,UAAkBI,GAC9BiC,GH8D4B4C,EG5DxB,CACEjF,SAAUP,EAAQO,SAAW,GH2DGD,EGzDlCN,EAAQC,IH0DP,SAAU2C,GACfA,EAzFK,CAAEhD,KAAM,wBA0FbwB,EAAUkB,cAAchC,EAAWkF,GAAU,SAACC,GAC5CrE,EAAUqB,UAAUgD,GAAgB,SAACpF,GACnCuC,EA7EwB,SAACvC,GAC/B,MAAO,CAAET,KAAM,gBAAiBS,QA4EjBqF,CAAiBrF,UAG1BiB,GACFA,QG7DEqE,EAAmB,WACvBP,GAAaD,IAEf,OACE,yBAAKzB,UAAU,WACb,yBAAKA,UAAU,mBACb,4BAAK1D,EAAQkB,OACb,uBAAGwC,UAAU,SAAb,IAAuB1D,EAAQmB,OAC/B,uBAAGuC,UAAW2B,EAAiB,qBAAuB,YACnDrF,EAAQO,SADX,kBAGC4E,EACC,kBAAC,EAAD,CACEnF,QAASA,EACTiF,aAAcU,EACdX,gBA/BY,SAAChF,EAASmC,EAAIb,GAClCsB,EH6CG,SAA6B5C,EAASM,EAAWgB,GACtD,OAAO,SAAUsB,GACfxB,EAAUkB,cAAchC,EAAWN,GAAS,SAAC4F,GAC3ChD,EAzD8B,SAACgD,GACnC,MAAO,CAAEhG,KAAM,kBAAmBE,QAAS8F,GAwD9BC,CAAqBD,OAE5BtE,GACFA,KGnDOwE,CAAoB9F,EAASmC,EAAIb,KA+BlC6D,SAAUA,IAGZ,yBAAKzB,UAAU,2BACb,uBACEA,UACE2B,EACI,8BACA,qBAENxB,QAAS,kBAAM0B,EAAgBvF,KANjC,eAUA,uBAAG0D,UAAU,cAAcG,QAAS8B,GAApC,SAMJ,uBAAGjC,UAAU,gBAAgBG,QAAS,kBAAM3B,EAAclC,EAAQC,OAChE,uCCjDK8F,EApBQ,WACrB,IAAMnD,EAAWC,cAEXpD,EAAWqD,aAAY,SAACpD,GAAD,OAAWA,EAAMD,YAE9CsD,qBAAU,WJuBL,IAA6BzB,EItBhCsB,GJuBK,SAAUA,GACfxB,EAAUC,aAAY,SAAC5B,GACrBmD,EAfiC,SAACnD,GACtC,MAAO,CAAEG,KAAM,oBAAqBE,QAASL,GAchCuG,CAAwBvG,OAE/B6B,GACFA,SI3BD,CAACsB,IAEJ,IAAMqD,EAAmBxG,EAASS,KAAI,SAACF,GAAD,OACpC,kBAAC,EAAD,CAAiBmD,IAAKnD,EAAQC,IAAKD,QAASA,OAE9C,OACE,yBAAK0D,UAAU,mBACb,wCACCuC,ICyDQC,EAzEQ,SAACjF,GAAW,IAAD,EACNuD,mBAAS,IADH,mBACzBtD,EADyB,KAClBuD,EADkB,OAEND,mBAAS,IAFH,mBAEzBrD,EAFyB,KAElBuD,EAFkB,OAGAF,mBAAS,IAHT,mBAGzBjE,EAHyB,KAGfoE,EAHe,OAIFH,oBAAS,GAJP,mBAIzB2B,EAJyB,KAIhBC,EAJgB,KAK1BxD,EAAWC,cAEXwD,EAAsB,WAC1BD,GAAYD,IAoCRG,EAAa,WACjB7B,EAAS,IACTC,EAAS,IACTC,EAAY,IACZyB,GAAW,IAGPG,EAAeJ,EAAU,mBAAqB,WAEpD,OACE,yBAAKzC,UAAW6C,GACd,2BACE,uBAAG7C,UAAU,4BAA4BG,QAASwC,GAAlD,kBAIF,2CACA,kBAAC,EAAD,CACEnF,MAAOA,EACPC,MAAOA,EACPZ,SAAUA,EACV8D,WAAW,MACXD,SAvDe,SAACQ,GAGpB,IL0B6B5E,EAASsB,EK5BtCsD,EAAEE,iBAQFlC,GLoB6B5C,EK1Bd,CACbkB,QACAC,QACAZ,YLuBoCe,EKnBT,WACzB+E,IACAC,KLkBC,SAAU1D,GACfxB,EAAUY,WAAWhC,GAAS,SAAC4F,GAC7BhD,EA1C2B,SAACgD,GAChC,MAAO,CAAEhG,KAAM,gBAAiBE,QAAS8F,GAyC5BY,CAAkBZ,OAGzBtE,GACFA,QKoBE6C,cAvCoB,SAACS,GACzB,IAAMZ,EAAOY,EAAEC,OAAOb,KAChBC,EAAQW,EAAEC,OAAOZ,MACvB,OAAQD,GACN,IAAK,QACHS,EAASR,GACT,MACF,IAAK,QACHS,EAAST,GACT,MACF,IAAK,WACHU,EAAYV,SC1BLwC,EAbF,WACX,OACE,yBAAKtE,GAAG,OACN,kBAAC,EAAD,MAEA,8BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCAOuE,EARK,WAClB,OACE,oCACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWJ,MCKnBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUzG,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,SAIN0G,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjG,MAAK,SAAAkG,GACJA,EAAaC,gBAEdhG,OAAM,SAAAiG,GACL/F,QAAQ+F,MAAMA,EAAMC,c","file":"static/js/main.a352f95b.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport { products } from \"./products\";\nimport { cart } from \"./cart\";\nimport { loading } from \"./loading\";\n\nexport const rootReducer = combineReducers({\n  products,\n  cart,\n  loading,\n});\n","export const products = (state = [], action) => {\n  switch (action.type) {\n    case \"PRODUCTS_RECEIVED\":\n      return state.concat(action.payload);\n    case \"PRODUCT_DELETED\":\n      return state.filter((product) => product._id !== action.payload);\n    case \"PRODUCT_ADDED\":\n      return state.concat(action.payload);\n    case \"PRODUCT_UPDATED\":\n      return state.map((product) => {\n        if (product._id === action.payload._id) {\n          return Object.assign({}, action.payload);\n        } else {\n          return product;\n        }\n      });\n    case \"ADDED_TO_CART\":\n      return state.map((product) => {\n        if (product._id === action.item.productId) {\n          const quantity = product.quantity === 0 ? 0 : product.quantity - 1;\n          return Object.assign({}, product, { quantity });\n        } else {\n          return product;\n        }\n      });\n    default:\n      return state;\n  }\n};\n","export const cart = (state = [], action) => {\n  switch (action.type) {\n    case \"ADDED_TO_CART\":\n      const someInCart = state.some((item) => item._id === action.item._id);\n      let updatedCart;\n\n      while (action.item.quantity > 0) {\n        if (someInCart) {\n          updatedCart = state.map((product) => {\n            if (product._id === action.item._id) {\n              return Object.assign({}, product, {\n                quantity: product.quantity + 1,\n              });\n            } else {\n              return product;\n            }\n          });\n        } else {\n          updatedCart = state.concat(\n            Object.assign({}, action.item, { quantity: 1 })\n          );\n        }\n        return updatedCart;\n      }\n      return state;\n    case \"CART_ITEMS_RECEIVED\":\n      return action.payload;\n    case \"CHECKOUT\":\n      return [];\n    default:\n      return state;\n  }\n};\n","export const loading = (state = false, action) => {\n  switch (action.type) {\n    case \"ADD_TO_CART_REQUEST\":\n      return true;\n    case \"ADDED_TO_CART\":\n      return false;\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"./reducers/rootReducer\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from \"react\";\n\nconst CartItem = (props) => {\n  return (\n    <tr>\n      <td>{props.title}</td>\n      <td>{props.quantity}</td>\n      <td>${props.price}</td>\n    </tr>\n  );\n};\n\nexport default CartItem;\n","import axios from \"axios\";\nimport * as routes from \"../constants/ApiRoutes\";\n\n// axios.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\n// axios.defaults.headers.common[\"Accept\"] = \"application/json\";\n\nconst apiClient = {\n  getProducts: function (callback) {\n    return axios\n      .get(routes.GET_PRODUCTS_URL)\n      .then((response) => response.data)\n      .then(callback)\n      .catch((err) => console.log(err));\n  },\n  addProduct: function (product, callback) {\n    return axios\n      .post(routes.ADD_PRODUCT_URL, { ...product })\n      .then((response) => response.data)\n      .then(callback)\n      .catch((err) => console.log(err));\n  },\n  deleteProduct: function (id, callback) {\n    return axios\n      .delete(routes.deleteProduct(id))\n      .then((response) => response.data)\n      .then(callback)\n      .catch((err) => console.log(err));\n  },\n\n  updateProduct: function (id, product, callback) {\n    return axios\n      .put(routes.updateProduct(id), { ...product })\n      .then((response) => response.data)\n      .then(callback)\n      .catch((err) => console.log(err));\n  },\n  getCartItems: function (callback) {\n    return axios\n      .get(routes.GET_CART_ITEMS)\n      .then((response) => response.data)\n      .then(callback)\n      .catch((err) => console.log(err));\n  },\n  addToCart: function (product, callback) {\n    return axios\n      .post(routes.ADD_TO_CART, {\n        productId: product.id,\n        title: product.title,\n        price: product.price,\n      })\n      .then((response) => response.data)\n      .then(callback)\n      .catch((err) => console.log(err));\n  },\n  checkout: function (callback) {\n    return axios\n      .post(routes.CHECKOUT)\n      .then((response) => response.data)\n      .then(callback)\n      .catch((err) => console.log(err));\n  },\n};\n\nexport default apiClient;\n","export const ADD_PRODUCT_URL = \"/api/products\";\n\nexport const GET_PRODUCTS_URL = \"/api/products\";\n\nexport const deleteProduct = (id) => `/api/products/${id}`;\n\nexport const updateProduct = (id) => `/api/products/${id}`;\nexport const ADD_TO_CART = \"/api/cart\";\nexport const GET_CART_ITEMS = \"/api/cart\";\nexport const CHECKOUT = \"/api/cart/checkout\";\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CartItem from \"./CartItem\";\nimport {\n  fetchCartItemsAction,\n  checkoutAction,\n} from \"../actions/productActions\";\n\nconst ShoppingCart = () => {\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => {\n    return state.cart;\n  });\n\n  useEffect(() => {\n    dispatch(fetchCartItemsAction());\n  }, []);\n\n  const checkout = useCallback(() => {\n    dispatch(checkoutAction());\n  }, [dispatch]);\n\n  const cartItems = cart.map((item) => <CartItem key={item._id} {...item} />);\n\n  const calculateTotal =\n    Math.round(\n      cart.reduce((acc, item) => acc + item.price * item.quantity, 0) * 100\n    ) / 100;\n  return (\n    <header>\n      <h1>The Shop!</h1>\n      {cart.length === 0 ? (\n        <div className=\"cart\">\n          <h2>Your Cart</h2>\n          <p>Your cart is empty</p>\n          <p>Total: $0</p>\n          <a className=\"button checkout disabled\">Checkout</a>\n        </div>\n      ) : (\n        <div className=\"cart\">\n          <h2>Your Cart</h2>\n          <table className=\"cart-items\">\n            <thead>\n              <tr>\n                <th>Item</th>\n                <th>Quantity</th>\n                <th>Price</th>\n              </tr>\n            </thead>\n            <tbody>\n              {cartItems}\n\n              <tr>\n                <td colSpan=\"3\" className=\"total\">\n                  Total: ${calculateTotal.toFixed(2)}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <a className=\"button checkout\" onClick={checkout}>\n            Checkout\n          </a>\n        </div>\n      )}\n    </header>\n  );\n};\n\nexport default ShoppingCart;\n","import apiClient from \"../lib/ApiClient\";\n\nexport const addToCartRequest = () => {\n  return { type: \"ADD_TO_CART_REQUEST\" };\n};\n\nexport const addProductSuccess = (newProduct) => {\n  return { type: \"PRODUCT_ADDED\", payload: newProduct };\n};\n\nexport const deleteProductSuccess = (productId) => {\n  return { type: \"PRODUCT_DELETED\", payload: productId };\n};\n\nexport const updateProductSuccess = (newProduct) => {\n  return { type: \"PRODUCT_UPDATED\", payload: newProduct };\n};\n\nexport const addToCartSuccess = (item) => {\n  return { type: \"ADDED_TO_CART\", item };\n};\n\nexport const productsReceivedSuccess = (products) => {\n  return { type: \"PRODUCTS_RECEIVED\", payload: products };\n};\n\nexport const cartItemsReceivedSuccess = (cartItems) => {\n  return { type: \"CART_ITEMS_RECEIVED\", payload: cartItems };\n};\n\nexport const checkoutSuccess = () => {\n  return { type: \"CHECKOUT\" };\n};\n\nexport function fetchProductsAction(callback) {\n  return function (dispatch) {\n    apiClient.getProducts((products) => {\n      dispatch(productsReceivedSuccess(products));\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n\nexport function addProductAction(product, callback) {\n  return function (dispatch) {\n    apiClient.addProduct(product, (newProduct) => {\n      dispatch(addProductSuccess(newProduct));\n    });\n\n    if (callback) {\n      callback();\n    }\n  };\n}\n\nexport function deleteProductAction(productId, callback) {\n  return function (dispatch) {\n    apiClient.deleteProduct(productId, () => {\n      dispatch(deleteProductSuccess(productId));\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n\nexport function updateProductAction(product, productId, callback) {\n  return function (dispatch) {\n    apiClient.updateProduct(productId, product, (newProduct) => {\n      dispatch(updateProductSuccess(newProduct));\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n\nexport function fetchCartItemsAction(callback) {\n  return function (dispatch) {\n    apiClient.getCartItems((cartItems) => {\n      dispatch(cartItemsReceivedSuccess(cartItems));\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n\nexport function addToCartAction(cartItem, productId, callback) {\n  return function (dispatch) {\n    dispatch(addToCartRequest());\n    apiClient.updateProduct(productId, cartItem, (updatedProduct) => {\n      apiClient.addToCart(updatedProduct, (item) => {\n        dispatch(addToCartSuccess(item));\n      });\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n\nexport function checkoutAction(callback) {\n  return function (dispatch) {\n    apiClient.checkout(() => {\n      dispatch(checkoutSuccess());\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n","import React from \"react\";\n\nconst ProductForm = (props) => {\n  return (\n    <form>\n      <div className=\"input-group\">\n        <label htmlFor=\"product-name\">Product Name</label>\n        <input\n          type=\"text\"\n          id=\"product-name\"\n          name=\"title\"\n          value={props.title}\n          onChange={props.onInputChange}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"product-price\">Price</label>\n        <input\n          type=\"text\"\n          id=\"product-price\"\n          name=\"price\"\n          value={props.price}\n          onChange={props.onInputChange}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"product-quantity\">Quantity</label>\n        <input\n          type=\"text\"\n          id=\"product-quantity\"\n          value=\"2\"\n          name=\"quantity\"\n          value={props.quantity}\n          onChange={props.onInputChange}\n        />\n      </div>\n\n      <div className=\"actions form-actions\">\n        <a className=\"button\" onClick={props.onSubmit}>\n          {props.submitText}\n        </a>\n        {props.submitText !== \"Add\" ? (\n          <a className=\"button\" onClick={props.onCancelClick}>\n            Cancel\n          </a>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default ProductForm;\n","import React, { useState } from \"react\";\nimport ProductForm from \"./ProductForm\";\n\nconst EditProductForm = (props) => {\n  const [title, setTitle] = useState(props.product.title || \"\");\n  const [price, setPrice] = useState(props.product.price || 0);\n  const [quantity, setQuantity] = useState(props.product.quantity || 0);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let editedProduct = {\n      title,\n      price,\n      quantity,\n    };\n    props.onUpdateProduct(editedProduct, props.product._id, props.onToggleEdit);\n  };\n\n  const handleInputChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    switch (name) {\n      case \"title\":\n        setTitle(value);\n        break;\n      case \"price\":\n        setPrice(value);\n        break;\n      case \"quantity\":\n        setQuantity(value);\n        break;\n    }\n  };\n\n  const handleCancelClick = () => {\n    setTitle(props.product.title);\n    setPrice(props.product.price);\n    setQuantity(props.product.quantity);\n    props.onToggleEdit();\n  };\n\n  return (\n    <div className=\"edit-form\">\n      <h3>Edit Product</h3>\n      <ProductForm\n        title={title}\n        price={price}\n        quantity={quantity}\n        onInputChange={handleInputChange}\n        onSubmit={handleSubmit}\n        submitText=\"Update\"\n        onCancelClick={handleCancelClick}\n      />\n    </div>\n  );\n};\n\nexport default EditProductForm;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  updateProductAction,\n  deleteProductAction,\n  addToCartAction,\n} from \"../actions/productActions\";\nimport EditProductForm from \"./EditProductForm\";\n\nconst EditableProduct = (props) => {\n  const [editable, setEditable] = useState(false);\n  const { product } = props;\n  const isZeroQuantity = product.quantity === 0;\n\n  const loading = useSelector((state) => state.loading);\n\n  const dispatch = useDispatch();\n\n  const deleteProduct = (id) => {\n    dispatch(deleteProductAction(id));\n  };\n\n  const updateProduct = (product, id, callback) => {\n    dispatch(updateProductAction(product, id, callback));\n  };\n\n  const handleAddToCart = (product) => {\n    if (product.quantity === 0 || loading) return;\n    dispatch(\n      addToCartAction(\n        {\n          quantity: product.quantity - 1,\n        },\n        product._id\n      )\n    );\n  };\n\n  const handleToggleEdit = () => {\n    setEditable(!editable);\n  };\n  return (\n    <div className=\"product\">\n      <div className=\"product-details\">\n        <h3>{product.title}</h3>\n        <p className=\"price\">${product.price}</p>\n        <p className={isZeroQuantity ? \"quantity none-left\" : \"quantity\"}>\n          {product.quantity} left in stock\n        </p>\n        {editable ? (\n          <EditProductForm\n            product={product}\n            onToggleEdit={handleToggleEdit}\n            onUpdateProduct={updateProduct}\n            editable={editable}\n          />\n        ) : (\n          <div className=\"actions product-actions\">\n            <a\n              className={\n                isZeroQuantity\n                  ? \"button add-to-cart disabled\"\n                  : \"button add-to-cart\"\n              }\n              onClick={() => handleAddToCart(product)}\n            >\n              Add to Cart\n            </a>\n            <a className=\"button edit\" onClick={handleToggleEdit}>\n              Edit\n            </a>\n          </div>\n        )}\n\n        <a className=\"delete-button\" onClick={() => deleteProduct(product._id)}>\n          <span>X</span>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default EditableProduct;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport EditableProduct from \"./EditableProduct\";\nimport { fetchProductsAction } from \"../actions/productActions\";\n\nconst ProductListing = () => {\n  const dispatch = useDispatch();\n\n  const products = useSelector((state) => state.products);\n\n  useEffect(() => {\n    dispatch(fetchProductsAction());\n  }, [dispatch]);\n\n  const editableProducts = products.map((product) => (\n    <EditableProduct key={product._id} product={product} />\n  ));\n  return (\n    <div className=\"product-listing\">\n      <h2>Products</h2>\n      {editableProducts}\n    </div>\n  );\n};\n\nexport default ProductListing;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addProductAction } from \"../actions/productActions\";\nimport ProductForm from \"./ProductForm\";\n\nconst AddProductForm = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleToggleAddForm = () => {\n    setVisible(!visible);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let cartItem = {\n      title,\n      price,\n      quantity,\n    };\n\n    dispatch(\n      addProductAction(cartItem, () => {\n        handleToggleAddForm();\n        resetState();\n      })\n    );\n  };\n\n  const handleInputChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    switch (name) {\n      case \"title\":\n        setTitle(value);\n        break;\n      case \"price\":\n        setPrice(value);\n        break;\n      case \"quantity\":\n        setQuantity(value);\n        break;\n    }\n  };\n\n  const resetState = () => {\n    setTitle(\"\");\n    setPrice(\"\");\n    setQuantity(\"\");\n    setVisible(false);\n  };\n\n  const addFormClass = visible ? \"add-form visible\" : \"add-form\";\n\n  return (\n    <div className={addFormClass}>\n      <p>\n        <a className=\"button add-product-button\" onClick={handleToggleAddForm}>\n          Add A Product\n        </a>\n      </p>\n      <h3>Add Product</h3>\n      <ProductForm\n        title={title}\n        price={price}\n        quantity={quantity}\n        submitText=\"Add\"\n        onSubmit={handleSubmit}\n        onInputChange={handleInputChange}\n      />\n    </div>\n  );\n};\n\nexport default AddProductForm;\n","import React from \"react\";\nimport ShoppingCart from \"./ShoppingCart\";\nimport ProductListing from \"./ProductListing\";\nimport AddProductForm from \"./AddProductForm\";\n\nconst Shop = () => {\n  return (\n    <div id=\"app\">\n      <ShoppingCart />\n\n      <main>\n        <ProductListing />\n        <AddProductForm />\n      </main>\n    </div>\n  );\n};\n\nexport default Shop;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Shop from \"./Shop\";\n\nconst Application = () => {\n  return (\n    <>\n      <Route path=\"/\" exact component={Shop} />\n    </>\n  );\n};\n\nexport default Application;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport store from \"./lib/store\";\nimport Application from \"./components/Application\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <Application />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}