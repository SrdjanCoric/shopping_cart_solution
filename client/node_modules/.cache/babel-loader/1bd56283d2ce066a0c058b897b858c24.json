{"ast":null,"code":"import apiClient from \"../lib/ApiClient\";\nexport const addProductSuccess = newProduct => {\n  return {\n    type: \"PRODUCT_ADDED\",\n    payload: newProduct\n  };\n};\nexport const deleteProductSuccess = productId => {\n  return {\n    type: \"PRODUCT_DELETED\",\n    payload: productId\n  };\n};\nexport const updateProductSuccess = newProduct => {\n  return {\n    type: \"PRODUCT_UPDATED\",\n    payload: newProduct\n  };\n};\nexport const addToCartSuccess = product => {\n  return {\n    type: \"ADDED_TO_CART\",\n    product\n  };\n};\nexport const productsReceivedSuccess = products => {\n  return {\n    type: \"PRODUCTS_RECEIVED\",\n    payload: products\n  };\n};\nexport function fetchProductsAction(callback) {\n  return function (dispatch) {\n    apiClient.getProducts(products => {\n      dispatch(productsReceivedSuccess(products));\n    });\n\n    if (callback) {\n      callback();\n    }\n  };\n}\nexport function addProductAction(product, callback) {\n  return function (dispatch) {\n    apiClient.addProduct(product, newProduct => {\n      dispatch(addProductSuccess(newProduct));\n    });\n\n    if (callback) {\n      callback();\n    }\n  };\n}\nexport function deleteProductAction(productId, callback) {\n  return function (dispatch) {\n    apiClient.deleteProduct(productId, () => {\n      dispatch(deleteProductSuccess(productId));\n    });\n\n    if (callback) {\n      callback();\n    }\n  };\n}\nexport function updateProductAction(product, productId, callback) {\n  return function (dispatch) {\n    apiClient.updateProduct(productId, product, newProduct => {\n      dispatch(updateProductSuccess(newProduct));\n    });\n\n    if (callback) {\n      callback();\n    }\n  };\n}","map":{"version":3,"sources":["/home/srdjan/Desktop/Feb_cohort_2021_capstone/shopping_cart_sol_hooks_days/client/src/actions/productActions.js"],"names":["apiClient","addProductSuccess","newProduct","type","payload","deleteProductSuccess","productId","updateProductSuccess","addToCartSuccess","product","productsReceivedSuccess","products","fetchProductsAction","callback","dispatch","getProducts","addProductAction","addProduct","deleteProductAction","deleteProduct","updateProductAction","updateProduct"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,UAAD,IAAgB;AAC/C,SAAO;AAAEC,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEF;AAAlC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMG,oBAAoB,GAAIC,SAAD,IAAe;AACjD,SAAO;AAAEH,IAAAA,IAAI,EAAE,iBAAR;AAA2BC,IAAAA,OAAO,EAAEE;AAApC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMC,oBAAoB,GAAIL,UAAD,IAAgB;AAClD,SAAO;AAAEC,IAAAA,IAAI,EAAE,iBAAR;AAA2BC,IAAAA,OAAO,EAAEF;AAApC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMM,gBAAgB,GAAIC,OAAD,IAAa;AAC3C,SAAO;AAAEN,IAAAA,IAAI,EAAE,eAAR;AAAyBM,IAAAA;AAAzB,GAAP;AACD,CAFM;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,QAAD,IAAc;AACnD,SAAO;AAAER,IAAAA,IAAI,EAAE,mBAAR;AAA6BC,IAAAA,OAAO,EAAEO;AAAtC,GAAP;AACD,CAFM;AAIP,OAAO,SAASC,mBAAT,CAA6BC,QAA7B,EAAuC;AAC5C,SAAO,UAAUC,QAAV,EAAoB;AACzBd,IAAAA,SAAS,CAACe,WAAV,CAAuBJ,QAAD,IAAc;AAClCG,MAAAA,QAAQ,CAACJ,uBAAuB,CAACC,QAAD,CAAxB,CAAR;AACD,KAFD;;AAGA,QAAIE,QAAJ,EAAc;AACZA,MAAAA,QAAQ;AACT;AACF,GAPD;AAQD;AAED,OAAO,SAASG,gBAAT,CAA0BP,OAA1B,EAAmCI,QAAnC,EAA6C;AAClD,SAAO,UAAUC,QAAV,EAAoB;AACzBd,IAAAA,SAAS,CAACiB,UAAV,CAAqBR,OAArB,EAA+BP,UAAD,IAAgB;AAC5CY,MAAAA,QAAQ,CAACb,iBAAiB,CAACC,UAAD,CAAlB,CAAR;AACD,KAFD;;AAGA,QAAIW,QAAJ,EAAc;AACZA,MAAAA,QAAQ;AACT;AACF,GAPD;AAQD;AAED,OAAO,SAASK,mBAAT,CAA6BZ,SAA7B,EAAwCO,QAAxC,EAAkD;AACvD,SAAO,UAAUC,QAAV,EAAoB;AACzBd,IAAAA,SAAS,CAACmB,aAAV,CAAwBb,SAAxB,EAAmC,MAAM;AACvCQ,MAAAA,QAAQ,CAACT,oBAAoB,CAACC,SAAD,CAArB,CAAR;AACD,KAFD;;AAGA,QAAIO,QAAJ,EAAc;AACZA,MAAAA,QAAQ;AACT;AACF,GAPD;AAQD;AAED,OAAO,SAASO,mBAAT,CAA6BX,OAA7B,EAAsCH,SAAtC,EAAiDO,QAAjD,EAA2D;AAChE,SAAO,UAAUC,QAAV,EAAoB;AACzBd,IAAAA,SAAS,CAACqB,aAAV,CAAwBf,SAAxB,EAAmCG,OAAnC,EAA6CP,UAAD,IAAgB;AAC1DY,MAAAA,QAAQ,CAACP,oBAAoB,CAACL,UAAD,CAArB,CAAR;AACD,KAFD;;AAGA,QAAIW,QAAJ,EAAc;AACZA,MAAAA,QAAQ;AACT;AACF,GAPD;AAQD","sourcesContent":["import apiClient from \"../lib/ApiClient\";\n\nexport const addProductSuccess = (newProduct) => {\n  return { type: \"PRODUCT_ADDED\", payload: newProduct };\n};\n\nexport const deleteProductSuccess = (productId) => {\n  return { type: \"PRODUCT_DELETED\", payload: productId };\n};\n\nexport const updateProductSuccess = (newProduct) => {\n  return { type: \"PRODUCT_UPDATED\", payload: newProduct };\n};\n\nexport const addToCartSuccess = (product) => {\n  return { type: \"ADDED_TO_CART\", product };\n};\n\nexport const productsReceivedSuccess = (products) => {\n  return { type: \"PRODUCTS_RECEIVED\", payload: products };\n};\n\nexport function fetchProductsAction(callback) {\n  return function (dispatch) {\n    apiClient.getProducts((products) => {\n      dispatch(productsReceivedSuccess(products));\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n\nexport function addProductAction(product, callback) {\n  return function (dispatch) {\n    apiClient.addProduct(product, (newProduct) => {\n      dispatch(addProductSuccess(newProduct));\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n\nexport function deleteProductAction(productId, callback) {\n  return function (dispatch) {\n    apiClient.deleteProduct(productId, () => {\n      dispatch(deleteProductSuccess(productId));\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n\nexport function updateProductAction(product, productId, callback) {\n  return function (dispatch) {\n    apiClient.updateProduct(productId, product, (newProduct) => {\n      dispatch(updateProductSuccess(newProduct));\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}