{"ast":null,"code":"import apiClient from \"../lib/ApiClient\";\nexport const addToCartRequest = () => {\n  return {\n    type: \"ADD_TO_CART_REQUEST\"\n  };\n};\nexport const addProductSuccess = newProduct => {\n  return {\n    type: \"PRODUCT_ADDED\",\n    payload: newProduct\n  };\n};\nexport const deleteProductSuccess = productId => {\n  return {\n    type: \"PRODUCT_DELETED\",\n    payload: productId\n  };\n};\nexport const updateProductSuccess = newProduct => {\n  return {\n    type: \"PRODUCT_UPDATED\",\n    payload: newProduct\n  };\n};\nexport const addToCartSuccess = product => {\n  return {\n    type: \"ADDED_TO_CART\",\n    product\n  };\n};\nexport const productsReceivedSuccess = products => {\n  return {\n    type: \"PRODUCTS_RECEIVED\",\n    payload: products\n  };\n};\nexport function fetchProductsAction(callback) {\n  return function (dispatch) {\n    apiClient.getProducts(products => {\n      dispatch(productsReceivedSuccess(products));\n    });\n\n    if (callback) {\n      callback();\n    }\n  };\n}\nexport function addProductAction(product, callback) {\n  return function (dispatch) {\n    apiClient.addProduct(product, newProduct => {\n      dispatch(addProductSuccess(newProduct));\n    });\n\n    if (callback) {\n      callback();\n    }\n  };\n}\nexport function deleteProductAction(productId, callback) {\n  return function (dispatch) {\n    apiClient.deleteProduct(productId, () => {\n      dispatch(deleteProductSuccess(productId));\n    });\n\n    if (callback) {\n      callback();\n    }\n  };\n}\nexport function updateProductAction(product, productId, callback) {\n  return function (dispatch) {\n    apiClient.updateProduct(productId, product, newProduct => {\n      dispatch(updateProductSuccess(newProduct));\n    });\n\n    if (callback) {\n      callback();\n    }\n  };\n}\nexport function addToCartAction(product, productId, callback) {\n  return function (dispatch) {\n    dispatch(addToCartRequest());\n    apiClient.updateProduct(productId, product, product => {\n      dispatch(addToCartSuccess(product));\n    });\n\n    if (callback) {\n      callback();\n    }\n  };\n}","map":{"version":3,"sources":["/home/srdjan/Desktop/Practice_Capstone/shopping_cart_solution/client/src/actions/productActions.js"],"names":["apiClient","addToCartRequest","type","addProductSuccess","newProduct","payload","deleteProductSuccess","productId","updateProductSuccess","addToCartSuccess","product","productsReceivedSuccess","products","fetchProductsAction","callback","dispatch","getProducts","addProductAction","addProduct","deleteProductAction","deleteProduct","updateProductAction","updateProduct","addToCartAction"],"mappings":"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","sourcesContent":["import apiClient from \"../lib/ApiClient\";\n\nexport const addToCartRequest = () => {\n  return { type: \"ADD_TO_CART_REQUEST\" };\n};\n\nexport const addProductSuccess = (newProduct) => {\n  return { type: \"PRODUCT_ADDED\", payload: newProduct };\n};\n\nexport const deleteProductSuccess = (productId) => {\n  return { type: \"PRODUCT_DELETED\", payload: productId };\n};\n\nexport const updateProductSuccess = (newProduct) => {\n  return { type: \"PRODUCT_UPDATED\", payload: newProduct };\n};\n\nexport const addToCartSuccess = (product) => {\n  return { type: \"ADDED_TO_CART\", product };\n};\n\nexport const productsReceivedSuccess = (products) => {\n  return { type: \"PRODUCTS_RECEIVED\", payload: products };\n};\n\nexport function fetchProductsAction(callback) {\n  return function (dispatch) {\n    apiClient.getProducts((products) => {\n      dispatch(productsReceivedSuccess(products));\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n\nexport function addProductAction(product, callback) {\n  return function (dispatch) {\n    apiClient.addProduct(product, (newProduct) => {\n      dispatch(addProductSuccess(newProduct));\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n\nexport function deleteProductAction(productId, callback) {\n  return function (dispatch) {\n    apiClient.deleteProduct(productId, () => {\n      dispatch(deleteProductSuccess(productId));\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n\nexport function updateProductAction(product, productId, callback) {\n  return function (dispatch) {\n    apiClient.updateProduct(productId, product, (newProduct) => {\n      dispatch(updateProductSuccess(newProduct));\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n\nexport function addToCartAction(product, productId, callback) {\n  return function (dispatch) {\n    dispatch(addToCartRequest());\n    apiClient.updateProduct(productId, product, (product) => {\n      dispatch(addToCartSuccess(product));\n    });\n    if (callback) {\n      callback();\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}