{"ast":null,"code":"export const cart = (state = [], action) => {\n  switch (action.type) {\n    case \"ADDED_TO_CART\":\n      const someInCart = state.some(prod => prod._id === action.product._id);\n      let updatedCart;\n\n      while (action.product.quantity > 0) {\n        if (someInCart) {\n          updatedCart = state.map(product => {\n            if (product._id === action.product._id) {\n              return Object.assign({}, product, {\n                quantity: product.quantity + 1\n              });\n            } else {\n              return product;\n            }\n          });\n        } else {\n          updatedCart = state.concat(Object.assign({}, action.product, {\n            quantity: 1\n          }));\n        }\n\n        return updatedCart;\n      }\n\n      return state;\n\n    case \"PRODUCT_DELETED\":\n      return state.filter(prod => prod._id !== action.payload);\n\n    case \"PRODUCT_UPDATED\":\n      return state.map(prod => {\n        if (prod._id === action.payload._id) {\n          let updatedProduct = {\n            title: action.payload.title || prod.title,\n            price: action.payload.price === undefined ? prod.price : action.payload.price\n          };\n          return Object.assign({}, prod, updatedProduct);\n        } else {\n          return prod;\n        }\n      });\n\n    case \"CHECKOUT_CART\":\n      return [];\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/srdjan/Desktop/Feb_cohort_2021_capstone/shopping_cart_sol_hooks_days/client/src/lib/reducers/cart.js"],"names":["cart","state","action","type","someInCart","some","prod","_id","product","updatedCart","quantity","map","Object","assign","concat","filter","payload","updatedProduct","title","price","undefined"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,YAAMC,UAAU,GAAGH,KAAK,CAACI,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACM,OAAP,CAAeD,GAAjD,CAAnB;AACA,UAAIE,WAAJ;;AAEA,aAAOP,MAAM,CAACM,OAAP,CAAeE,QAAf,GAA0B,CAAjC,EAAoC;AAClC,YAAIN,UAAJ,EAAgB;AACdK,UAAAA,WAAW,GAAGR,KAAK,CAACU,GAAN,CAAWH,OAAD,IAAa;AACnC,gBAAIA,OAAO,CAACD,GAAR,KAAgBL,MAAM,CAACM,OAAP,CAAeD,GAAnC,EAAwC;AACtC,qBAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,OAAlB,EAA2B;AAChCE,gBAAAA,QAAQ,EAAEF,OAAO,CAACE,QAAR,GAAmB;AADG,eAA3B,CAAP;AAGD,aAJD,MAIO;AACL,qBAAOF,OAAP;AACD;AACF,WARa,CAAd;AASD,SAVD,MAUO;AACLC,UAAAA,WAAW,GAAGR,KAAK,CAACa,MAAN,CACZF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,MAAM,CAACM,OAAzB,EAAkC;AAAEE,YAAAA,QAAQ,EAAE;AAAZ,WAAlC,CADY,CAAd;AAGD;;AACD,eAAOD,WAAP;AACD;;AACD,aAAOR,KAAP;;AACF,SAAK,iBAAL;AACE,aAAOA,KAAK,CAACc,MAAN,CAAcT,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACc,OAA3C,CAAP;;AACF,SAAK,iBAAL;AACE,aAAOf,KAAK,CAACU,GAAN,CAAWL,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACc,OAAP,CAAeT,GAAhC,EAAqC;AACnC,cAAIU,cAAc,GAAG;AACnBC,YAAAA,KAAK,EAAEhB,MAAM,CAACc,OAAP,CAAeE,KAAf,IAAwBZ,IAAI,CAACY,KADjB;AAEnBC,YAAAA,KAAK,EACHjB,MAAM,CAACc,OAAP,CAAeG,KAAf,KAAyBC,SAAzB,GACId,IAAI,CAACa,KADT,GAEIjB,MAAM,CAACc,OAAP,CAAeG;AALF,WAArB;AAOA,iBAAOP,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,IAAlB,EAAwBW,cAAxB,CAAP;AACD,SATD,MASO;AACL,iBAAOX,IAAP;AACD;AACF,OAbM,CAAP;;AAcF,SAAK,eAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAOL,KAAP;AA5CJ;AA8CD,CA/CM","sourcesContent":["export const cart = (state = [], action) => {\n  switch (action.type) {\n    case \"ADDED_TO_CART\":\n      const someInCart = state.some((prod) => prod._id === action.product._id);\n      let updatedCart;\n\n      while (action.product.quantity > 0) {\n        if (someInCart) {\n          updatedCart = state.map((product) => {\n            if (product._id === action.product._id) {\n              return Object.assign({}, product, {\n                quantity: product.quantity + 1,\n              });\n            } else {\n              return product;\n            }\n          });\n        } else {\n          updatedCart = state.concat(\n            Object.assign({}, action.product, { quantity: 1 })\n          );\n        }\n        return updatedCart;\n      }\n      return state;\n    case \"PRODUCT_DELETED\":\n      return state.filter((prod) => prod._id !== action.payload);\n    case \"PRODUCT_UPDATED\":\n      return state.map((prod) => {\n        if (prod._id === action.payload._id) {\n          let updatedProduct = {\n            title: action.payload.title || prod.title,\n            price:\n              action.payload.price === undefined\n                ? prod.price\n                : action.payload.price,\n          };\n          return Object.assign({}, prod, updatedProduct);\n        } else {\n          return prod;\n        }\n      });\n    case \"CHECKOUT_CART\":\n      return [];\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}